apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: infrastructure
  namespace: argocd
spec:
  description: Core infrastructure components
  sourceRepos:
    - '*' # In production, specify exact repo URLs
  destinations:
    - namespace: '*'
      server: https://kubernetes.default.svc
  clusterResourceWhitelist:
    - group: 'cilium.io'
      kind: 'CiliumIdentity'
    - group: 'gateway.networking.k8s.io'
      kind: 'GatewayClass'
    - group: 'gateway.networking.k8s.io'
      kind: 'Gateway'
  namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
  roles:
    - name: admin
      description: Admin role for infrastructure project
      policies:
        - p, proj:infrastructure:admin, applications, *, infrastructure/*, allow
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: monitoring
  namespace: argocd
spec:
  description: Monitoring and observability components
  sourceRepos:
    - '*' # In production, specify exact repo URLs
  destinations:
    - namespace: 'monitoring'
      server: 'https://kubernetes.default.svc'
    - namespace: 'prometheus-stack'
      server: 'https://kubernetes.default.svc'
    - namespace: 'loki-stack'
      server: 'https://kubernetes.default.svc'
    - namespace: 'monitoring-stack'
      server: 'https://kubernetes.default.svc'
    - namespace: 'observability'
      server: 'https://kubernetes.default.svc'
  clusterResourceWhitelist:
    - group: 'monitoring.coreos.com'
      kind: 'ServiceMonitor'
    - group: 'monitoring.coreos.com'
      kind: 'PrometheusRule'
  namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
  roles:
    - name: admin
      description: Admin role for monitoring project
      policies:
        - p, proj:monitoring:admin, applications, *, monitoring/*, allow
    - name: troubleshooting
      description: "Allow exec into pods for troubleshooting"
      policies:
        - p, proj:monitoring:troubleshooting, exec, create, */*, allow
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: my-apps
  namespace: argocd
spec:
  description: Project for my custom applications hosted in the my-apps folder
  # Allow deploying apps to any namespace
  destinations:
    - namespace: '*'
      server: '*'
  # Allow deploying namespaced resources from specific groups
  namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
  # Resources that can be created at cluster scope
  clusterResourceWhitelist:
    - group: 'external-secrets.io'
      kind: 'ClusterSecretStore'
  sourceRepos:
    - '*' # Allow deploying from any Git repository, adjust if needed
  roles:
    - name: admin
      description: "Admin access to my-apps"
      policies:
        - p, proj:my-apps:admin, applications, *, my-apps/*, allow
    - name: troubleshooting
      description: "Allow exec into pods for troubleshooting"
      policies:
        - p, proj:my-apps:troubleshooting, exec, create, */*, allow

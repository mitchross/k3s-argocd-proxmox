# Copyright (c) 2019, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-device-plugin-daemonset
  namespace: gpu-device-plugin
  labels:
    app.kubernetes.io/name: nvidia-device-plugin
    app.kubernetes.io/version: "v0.17.2"
    app.kubernetes.io/component: device-plugin
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nvidia-device-plugin
      app.kubernetes.io/component: device-plugin
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nvidia-device-plugin
        app.kubernetes.io/version: "v0.17.2"
        app.kubernetes.io/component: device-plugin
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      runtimeClassName: nvidia
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: "system-node-critical"
      serviceAccountName: nvidia-device-plugin
      nodeSelector:
        feature.node.kubernetes.io/pci-0300_10de.present: "true"
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - image: nvcr.io/nvidia/k8s-device-plugin:v0.17.2
          name: nvidia-device-plugin-ctr
          imagePullPolicy: IfNotPresent
          args:
            - --config-file=/etc/nvidia-device-plugin/config.yaml
          env:
            - name: FAIL_ON_INIT_ERROR
              value: "false"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: all
          ports:
            - containerPort: 2112
              name: http-metrics
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            # Device plugins need root to create sockets in /var/lib/kubelet/device-plugins/
            # runAsNonRoot: true
            # runAsUser: 65534
            # runAsGroup: 65534
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: device-plugin
              mountPath: /var/lib/kubelet/device-plugins
            - name: config
              mountPath: /etc/nvidia-device-plugin
              readOnly: true
            - name: nvidia-config-dir
              mountPath: /etc/nvidia
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: config
          configMap:
            name: nvidia-device-plugin-config
        - name: nvidia-config-dir
          emptyDir: {}

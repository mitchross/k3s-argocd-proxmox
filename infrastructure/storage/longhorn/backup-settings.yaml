apiVersion: v1
kind: ConfigMap
metadata:
  name: longhorn-backup-config
  namespace: longhorn-system
data:
  # TrueNAS Scale NFS backup configuration
  backup-target: "nfs://truenas-ip:/mnt/pool/longhorn-backups"
  # Alternative S3-compatible backup (if TrueNAS has MinIO)
  # backup-target: "s3://longhorn-backups@us-east-1/"
---
apiVersion: v1
kind: Secret
metadata:
  name: longhorn-backup-credentials
  namespace: longhorn-system
type: Opaque
data:

# For NFS, these might not be needed, but for S3-compatible:
# AWS_ACCESS_KEY_ID: <base64-encoded-access-key>
# AWS_SECRET_ACCESS_KEY: <base64-encoded-secret-key>
# AWS_ENDPOINTS: <base64-encoded-truenas-s3-endpoint>
---
# Longhorn Settings for backup configuration
apiVersion: longhorn.io/v1beta2
kind: Setting
metadata:
  name: backup-target
  namespace: longhorn-system
spec:
  value: "nfs://192.168.10.139:/mnt/BigTank/k8s/longhornbackup"
---
apiVersion: longhorn.io/v1beta2
kind: Setting
metadata:
  name: backup-target-credential-secret
  namespace: longhorn-system
spec:
  value: "longhorn-backup-credentials"
---
# Enable automatic snapshot cleanup
apiVersion: longhorn.io/v1beta2
kind: Setting
metadata:
  name: remove-snapshots-during-filesystem-trim
  namespace: longhorn-system
spec:
  value: "true"
---
# Snapshot data integrity check
apiVersion: longhorn.io/v1beta2
kind: Setting
metadata:
  name: snapshot-data-integrity
  namespace: longhorn-system
spec:
  value: "enabled"
---
# Concurrent automatic backup creation
apiVersion: longhorn.io/v1beta2
kind: Setting
metadata:
  name: concurrent-automatic-backup-create-per-node
  namespace: longhorn-system
spec:
  value: "2"
---
# Backup compression
apiVersion: longhorn.io/v1beta2
kind: Setting
metadata:
  name: backup-compression-method
  namespace: longhorn-system
spec:
  value: "gzip" # Options: none, lz4, gzip
---
# Backup concurrent limit
apiVersion: longhorn.io/v1beta2
kind: Setting
metadata:
  name: concurrent-backup-create-per-node
  namespace: longhorn-system
spec:
  value: "1"

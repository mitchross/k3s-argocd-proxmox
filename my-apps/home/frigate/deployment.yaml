apiVersion: apps/v1
kind: Deployment
metadata:
  name: frigate
  namespace: frigate
  labels:
    app: frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      labels:
        app: frigate
    spec:
      runtimeClassName: nvidia
      priorityClassName: gpu-workload-high
      tolerations:
        - key: "gpu"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      nodeSelector:
        feature.node.kubernetes.io/pci-0300_10de.present: "true"
      containers:
        - name: frigate
          image: ghcr.io/blakeblackshear/frigate:0.16.0-beta4
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
          env:
            - name: TZ
              value: "America/New_York"
            - name: FRIGATE_MQTT_USER
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: FRIGATE_MQTT_USER
            - name: FRIGATE_MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: FRIGATE_MQTT_PASSWORD
            - name: FRIGATE_NEST_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: NEST_CLIENT_ID
            - name: FRIGATE_NEST_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: NEST_CLIENT_SECRET
            - name: FRIGATE_NEST_PROJECT_ID
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: NEST_PROJECT_ID
            - name: FRIGATE_NEST_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: NEST_REFRESH_TOKEN
          resources:
            limits:
              memory: 12Gi
              cpu: 12000m
              nvidia.com/gpu: 1
            requests:
              memory: 2Gi
              cpu: '1'
          volumeMounts:
            - name: config-dir
              mountPath: /config
            - name: config-file
              mountPath: /config/config.yml
              subPath: config.yml
            - name: media
              mountPath: /media
            - name: cache
              mountPath: /dev/shm
            - name: usb
              mountPath: /dev/bus/usb
          livenessProbe:
            httpGet:
              path: /api/version
              port: 5000
          readinessProbe:
            httpGet:
              path: /api/version
              port: 5000
      volumes:
        - name: config-dir
          emptyDir: {}
        - name: config-file
          configMap:
            name: frigate-configmap
        - name: media
          persistentVolumeClaim:
            claimName: frigate-media
        - name: cache
          emptyDir:
            medium: Memory
            sizeLimit: 4Gi
        - name: usb
          hostPath:
            path: /dev/bus/usb
            type: Directory
